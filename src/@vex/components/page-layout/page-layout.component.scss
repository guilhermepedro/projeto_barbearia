.vex-page-layout {
    display: block;
}

.vex-page-layout-simple {
    .vex-page-layout-content {
        padding-bottom: var(--padding-gutter);
        padding-top: var(--padding-gutter);
    }
}

.vex-page-layout-card {
    padding-bottom: var(--padding);

    .vex-page-layout-header {
        background-color: rgba($color: #181c25, $alpha: 1);
        margin-bottom: calc(var(--page-layout-toolbar-height) * -1);
        padding-top: 3%;
        padding-bottom: 1%;
    }

    .vex-page-layout-content {
        > * > .mat-tab-group .mat-tab-label,
        > .mat-tab-group .mat-tab-label {
            height: var(--page-layout-toolbar-height);
            font-size: 12pt;
            &.mat-tab-label-active {
                opacity: 0.7;
                font-size: 15pt;
            }
        }
    }
}

.vex-page-layout-header {
    h2 {
        font-size: 30pt;
        color: rgba($color: #ffffff, $alpha: 0.7);
        width: 800px;
        text-align: center;
    }
    align-items: center;
    @apply bg-primary text-primary-contrast;
    box-sizing: content-box !important;
    display: flex;
    flex-direction: row;
    height: calc(
        var(--page-layout-header-height) - var(--page-layout-toolbar-height)
    );
    padding-left: var(--padding);
    padding-right: var(--padding);
    place-content: center flex-start;

    .vex-breadcrumb {
        @apply text-primary-contrast opacity-50;

        &:hover {
            @apply text-primary-contrast opacity-100;
        }
    }
}

.vex-page-layout-content {
    box-sizing: border-box;
    display: block;
    padding-left: var(--padding-gutter);
    padding-right: var(--padding-gutter);
}
